AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'virtual-slide-viewer-efs

  SAM Template for EFS resources for virtual-slide-viewer-backend

  '
Parameters:
  VpcId:
    Type: String
    Description: 'ID of your existing Virtual Private Cloud (VPC)'
  SubnetIds:
    Type: CommaDelimitedList
    Description: 'The list of Subnet IDs, for at least two Availability Zones in the region in your Virtual Private Cloud (VPC)'

Resources:
  EfsLambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EFS + Lambda on SAM Security Group
      VpcId: !Ref VpcId
      SecurityGroupEgress:
      - CidrIp: '0.0.0.0/0'
        FromPort: 0
        ToPort: 65535
        IpProtocol: tcp
      SecurityGroupIngress:
      - CidrIp: '0.0.0.0/0'
        FromPort: 0
        ToPort: 65535
        IpProtocol: tcp
  EfsFileSystem:
    Type: AWS::EFS::FileSystem
  MountTargetA:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EfsFileSystem
      SubnetId: !Select [ 0, !Ref SubnetIds ]
      SecurityGroups: [!Ref EfsLambdaSecurityGroup]
  MountTargetB:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EfsFileSystem
      SubnetId: !Select [ 1, !Ref SubnetIds ]
      SecurityGroups: [!Ref EfsLambdaSecurityGroup]
  AccessPoint:
    Type: AWS::EFS::AccessPoint
    Properties:
      FileSystemId: !Ref EfsFileSystem
      PosixUser:
        Gid: '1000'
        Uid: '1000'
      RootDirectory:
        Path: /lambda
        CreationInfo:
          OwnerGid: '1000'
          OwnerUid: '1000'
          Permissions: '755'
  
Outputs:
  SecurityGroupId:
    Description: Security group id of EfsLambdaSecurityGroup
    Value: !Ref EfsLambdaSecurityGroup
  FileSystemId:
    Description: File system id of EfsFileSystem
    Value: !Ref EfsFileSystem
  AccessPointId:
    Description: ID of AccessPoint
    Value: !Ref AccessPoint
  AccessPointArn:
    Description: ARN of AccessPoint
    Value: !GetAtt AccessPoint.Arn