AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Top level deployment template for Virtual Slide Viewer'
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: General parameters
        Parameters:
        - EnvType
        - SupportsConfig
      - Label:
          default: VPC template parameters
        Parameters:
        - AvailabilityZones
      - Label:
          default: Web template parameters
        Parameters:
        - DomainName
    ParameterLabels:
      EnvType:
        default: Environment type
      SupportsConfig:
        default: Use AWS Config
      AvailabilityZones:
        default: Availability zones
      DomainName:
        default: Custom FQDN of CloudFront distribution
Parameters:
  EnvType:
    Description: Runtime environment type.
    Default: dev
    Type: String
  AppBucketName:
    Type: String
    Description: A legal bucket name.  Must not exist.
  DomainName:
    Type: String
    Description: Custom FQDN of CloudFront distribution
  HostedZoneName:
    Type: String
    Description: Name of the Route 53 hosted zone
  ViewerCertificateArn:
    Type: String
    Description: ARN of the SSL certificate for the DomainName
  SupportsConfig:
    Description: Is AWS Config Rules already configured for this region? Use ''false''
      if you are uncertain. See AWS Config Management Console or Deployment Guide
      for details.
    AllowedValues:
    - 'true'
    - 'false'
    Default: 'false'
    Type: String
  AvailabilityZones:
    Description: Availability Zones
    Type: CommaDelimitedList
    Default: us-east-2a, us-east-2b
  SlidesBucketName:
    Type: String
  PublishBucketName:
    Type: String
  CIDR:
    Description: CIDR block for  VPC
    Type: String
    Default: 10.100.0.0/16
  SubnetACIDR:
    Description: CIDR block for AZ-1b subnet
    Type: String
    Default: 10.100.10.0/24
  SubnetBCIDR:
    Description: CIDR block for AZ-1b subnet
    Type: String
    Default: 10.100.20.0/24
  FileSystemId:
    Type: String
    Description: File system id of EfsFileSystem
    Default: ""
  ApiCustomDomain:
    Type: String
    Description: Custom domain for the API endpoint. Be sure to include the trailing dot.
  ApiCertificateArn:
    Type: String
    Description: ARN of the SSL certificate for the API domain name

Conditions:
  LoadConfigRulesTemplate: !Equals [!Ref SupportsConfig, 'true']

Resources:
  VpcTemplate:
    Type: AWS::Serverless::Application
    Properties:
      Location: vpc.template.yaml
      Parameters:
        StackName: !Ref AWS::StackName
        EnvType: !Ref EnvType
        RegionAZ1Name:
          !Select
          - 0
          - !Ref AvailabilityZones
        RegionAZ2Name:
          !Select
          - 1
          - !Ref AvailabilityZones
        CIDR: !Ref CIDR
        SubnetACIDR: !Ref SubnetACIDR
        SubnetBCIDR: !Ref SubnetBCIDR
  EfsTemplate:
    Type: AWS::Serverless::Application
    DependsOn:
      - VpcTemplate
    Properties:
      Location: efs.template.yaml
      Parameters:
        StackName: !Ref AWS::StackName
        EnvType: !Ref EnvType
        VpcId: !GetAtt [VpcTemplate, Outputs.VpcId]
        Subnets: !GetAtt [VpcTemplate, Outputs.SubnetIds]
        FileSystemId: !Ref FileSystemId
  FuncTemplate:
    Type: AWS::Serverless::Application
    DependsOn:
      - VpcTemplate
      - EfsTemplate
    Properties:
      Location: template.yaml
      Parameters:
        StackName: !Ref AWS::StackName
        VpcId: !GetAtt [VpcTemplate, Outputs.VpcId]
        RouteTableId: !GetAtt [VpcTemplate, Outputs.RouteTableId]
        Subnets: !GetAtt [VpcTemplate, Outputs.SubnetIds]
        FileSystemId: !GetAtt [EfsTemplate, Outputs.FileSystemId]
        EfsSecurityGroup: !GetAtt [EfsTemplate, Outputs.EfsSecurityGroupId]
        AccessPointId: !GetAtt [EfsTemplate, Outputs.AccessPointId]
        AccessPointArn: !GetAtt [EfsTemplate, Outputs.AccessPointArn]
        EnvType: !Ref EnvType
        SlidesBucketName: !Ref SlidesBucketName
        PublishBucketName: !Ref PublishBucketName
        ApiCustomDomain: !Ref ApiCustomDomain
        HostedZoneName: !Ref HostedZoneName
        ApiCertificateArn: !Ref ApiCertificateArn
  WebTemplate:
    Type: AWS::Serverless::Application
    DependsOn:
      - FuncTemplate
    Properties:
      Location: web.template.yaml
      Parameters:
        EnvType: !Ref EnvType
        AppBucketName: !Ref AppBucketName
        DomainName: !Ref DomainName
        HostedZoneName: !Ref HostedZoneName
        HostedZoneName: !Ref HostedZoneName
        ViewerCertificateArn: !Ref ViewerCertificateArn
Outputs:
  ApiUrl:
    Value: !GetAtt [FuncTemplate, Outputs.ApiUrl]
  region:
    Value: !Sub ${AWS::Region}