AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  S3 and CloudFront resources for Virtual Slide Viewer front end.
  Add an alternate domain name to the CloudFront distribution and provide the name as parameter to the serverless stack. The alternate
  domain will also require adding a certificate to the Cloudfront Distribution. This alternative will set the User Pool client to the right Callback URL
  and Sign out URL automatically.
Parameters:
  EnvType:
    Description: Runtime environment type.
    Default: dev
    Type: String
  BucketName:
    Type: String
    Description: A legal bucket name.  Must not exist.
  SemanticVersion:
    Type: String
    Description: Semantic version of the back end
    Default: 2.0.3
  ApiDomain:
    Type: String
    Description: The FQDN of the API Gateway deployment
  HttpHeaders:
    Type: String
    Description: The HTTP headers to set on all responses from CloudFront. Defaults are illustrations only and contain a report-only Cloud Security Policy -- adjust for your application
    Default: |-
      {
        "Content-Security-Policy-Report-Only": "default-src 'none'; img-src 'self' data:; script-src 'self'; style-src 'self' 'nonce-7947e7bc32c84095a72ca1854c8d42bd'; font-src 'self' https://fonts.gstatic.com; object-src 'none'; connect-src 'self' https://*.amazonaws.com https://*.amazoncognito.com",
        "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
        "Referrer-Policy": "same-origin",
        "X-XSS-Protection": "1; mode=block",
        "X-Frame-Options": "DENY",
        "X-Content-Type-Options": "nosniff"
      }
  DomainName:
    Type: String
    Description: Custom FQDN of CloudFront distribution
  HostedZoneDomainName:
    Type: String
    Description: hosted zone domain name
  HostedZoneId:
    Type: String
    Description: hosted zone ID
  UserPoolArn:
    Type: String
    Description: The ARN of the Cognito user pool
  UserPoolClientId:
    Type: String
  GraphqlApiKey:
    Type: String
    Description: Domain for GraphQL API endpoint
  GraphqlApiDomain:
    Type: String
    Description: Domain for GraphQL API endpoint
  PriceClass:
    Type: String
    Description: CloudFront price class, e.g. PriceClass_200 for most regions (default), PriceClass_All for all regions (the default), PriceClass_100 least expensive (US, Canada, Europe), or PriceClass_All
    Default: PriceClass_100
Conditions:
  HasBucketName: !Not [!Equals [!Ref BucketName, '']]
Resources:
  ApplicationBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    DependsOn:
      - ApplicationBucket
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Ref ApplicationBucket
  S3AccessPolicyForOAI:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket:
        Ref: ApplicationBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              CanonicalUser:
                Fn::GetAtt: [ CloudFrontOriginAccessIdentity , S3CanonicalUserId ]
            Action: 's3:GetObject'
            Resource: !Sub '${ApplicationBucket.Arn}/*'
  LambdaEdgeProtection:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:520945424137:applications/cloudfront-authorization-at-edge
        SemanticVersion: !Ref SemanticVersion
      Parameters:
        HttpHeaders:
          !Ref HttpHeaders
        AlternateDomainNames: !Ref DomainName
        UserPoolArn: !Ref UserPoolArn
        UserPoolClientId: !Ref UserPoolClientId
        EnableSPAMode: true
        CreateCloudFrontDistribution: false
  ViewerCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties: 
      DomainName: !Ref DomainName
      DomainValidationOptions: 
        - DomainName: !Ref HostedZoneDomainName
          HostedZoneId: !Ref HostedZoneId
      ValidationMethod: DNS
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - LambdaEdgeProtection
      - ViewerCertificate
    Properties:
      DistributionConfig:
        Aliases: [!Ref DomainName]
        ViewerCertificate:
          AcmCertificateArn: !Ref ViewerCertificate
          SslSupportMethod: sni-only
          MinimumProtocolVersion: 'TLSv1.2_2019'
        HttpVersion: http2
        CacheBehaviors:
          - PathPattern: /parseauth
            Compress: true
            ForwardedValues:
              QueryString: true
            LambdaFunctionAssociations:
              - EventType: viewer-request
                LambdaFunctionARN: !GetAtt LambdaEdgeProtection.Outputs.ParseAuthHandler
            TargetOriginId: dummy-origin
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: /refreshauth
            Compress: true
            ForwardedValues:
              QueryString: true
            LambdaFunctionAssociations:
              - EventType: viewer-request
                LambdaFunctionARN: !GetAtt LambdaEdgeProtection.Outputs.RefreshAuthHandler
            TargetOriginId: dummy-origin
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: /signout
            Compress: true
            ForwardedValues:
              QueryString: true
            LambdaFunctionAssociations:
              - EventType: viewer-request
                LambdaFunctionARN: !GetAtt LambdaEdgeProtection.Outputs.SignOutHandler
            TargetOriginId: dummy-origin
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: /DeepZoom/*
            Compress: true
            ForwardedValues:
              QueryString: true
              Headers:
                - Accept
            TargetOriginId: API
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: /ImportSlide
            Compress: true
            ForwardedValues:
              QueryString: true
            TargetOriginId: API
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods: [GET,HEAD,OPTIONS,PUT,POST,PATCH,DELETE]
          - PathPattern: /graphql
            Compress: true
            ForwardedValues:
              QueryString: true
            LambdaFunctionAssociations:
              - EventType: viewer-request
                LambdaFunctionARN: !GetAtt LambdaEdgeProtection.Outputs.CheckAuthHandler
            TargetOriginId: GraphqlApi
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods: [GET,HEAD,OPTIONS,PUT,POST,PATCH,DELETE]
        DefaultCacheBehavior:
          Compress: true
          ForwardedValues:
            QueryString: true
          LambdaFunctionAssociations:
            - EventType: viewer-request
              LambdaFunctionARN: !GetAtt LambdaEdgeProtection.Outputs.CheckAuthHandler
            - EventType: origin-response
              LambdaFunctionARN: !GetAtt LambdaEdgeProtection.Outputs.HttpHeadersHandler
          TargetOriginId: protected-origin
          ViewerProtocolPolicy: redirect-to-https
        Enabled: true
        Origins:
          - DomainName: will-never-be-reached.org # Dummy origin is used for Lambda@Edge functions, keep this as-is
            Id: dummy-origin
            CustomOriginConfig:
              OriginProtocolPolicy: match-viewer
          - DomainName: !Ref ApiDomain
            Id: API
            OriginPath: !Sub '/${EnvType}'
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
              OriginSSLProtocols:
                - TLSv1.2
          - DomainName: !Sub '${ApplicationBucket}.s3.amazonaws.com'
            Id: protected-origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}'
          - DomainName: !Ref GraphqlApiDomain
            Id: GraphqlApi
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
              OriginSSLProtocols:
                - TLSv1.2
            OriginCustomHeaders:
              - HeaderName: x-api-key
                HeaderValue: !Ref GraphqlApiKey
        CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /index.html
        PriceClass: !Ref PriceClass
        DefaultRootObject: index.html
  DNSAlias:
    Type: AWS::Route53::RecordSet
    DependsOn:
      - CloudFrontDistribution
    Properties:
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
      HostedZoneId : !Ref HostedZoneId
      Name: !Ref DomainName
      Type: A
  DNSAAAAlias:
    Type: AWS::Route53::RecordSet
    DependsOn:
      - CloudFrontDistribution
    Properties:
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
      HostedZoneId : !Ref HostedZoneId
      Name: !Ref DomainName
      Type: AAAA
Outputs:
  BucketName:
    Description: Name of the created bucket for front-end resources
    Value: !Ref ApplicationBucket
  CloudFrontDistId:
    Description: ID of the CloudFront distribution that serves your SPA from S3
    Value: !Ref CloudFrontDistribution
  CloudFrontDomainName:
    Description: ID of the CloudFront distribution that serves your SPA from S3
    Value: !GetAtt CloudFrontDistribution.DomainName
