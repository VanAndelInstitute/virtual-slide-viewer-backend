AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  S3 and CloudFront resources for Virtual Slide Viewer front end.
  Add an alternate domain name to the CloudFront distribution and provide the name as parameter to the serverless stack. The alternate
  domain will also require adding a certificate to the Cloudfront Distribution. This alternative will set the User Pool client to the right Callback URL
  and Sign out URL automatically.
Parameters:
  EnvType:
    Description: Runtime environment type.
    Default: dev
    Type: String
  AppBucketName:
    Type: String
    Description: A legal bucket name.  Must not exist.
  DomainName:
    Type: String
    Description: Custom FQDN of CloudFront distribution
  HostedZoneName:
    Type: String
    Description: Name of the Route 53 hosted zone
  ViewerCertificateArn:
    Type: String
    Description: ARN of the SSL certificate for the DomainName
  PriceClass:
    Type: String
    Description: CloudFront price class, e.g. PriceClass_200 for most regions (default), PriceClass_All for all regions (the default), PriceClass_100 least expensive (US, Canada, Europe), or PriceClass_All
    Default: PriceClass_100

Resources:
  ApplicationBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref AppBucketName
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    DependsOn:
      - ApplicationBucket
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Ref ApplicationBucket
  S3AccessPolicyForOAI:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket:
        Ref: ApplicationBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              CanonicalUser:
                Fn::GetAtt: [ CloudFrontOriginAccessIdentity , S3CanonicalUserId ]
            Action: 's3:GetObject'
            Resource: !Sub '${ApplicationBucket.Arn}/*'
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases: [!Ref DomainName]
        ViewerCertificate:
          AcmCertificateArn: !Ref ViewerCertificateArn
          SslSupportMethod: sni-only
          MinimumProtocolVersion: 'TLSv1.2_2019'
        HttpVersion: http2
        DefaultCacheBehavior:
          Compress: true
          ForwardedValues:
            QueryString: true
          TargetOriginId: protected-origin
          ViewerProtocolPolicy: redirect-to-https
        Enabled: true
        Origins:
          - DomainName: !Sub '${ApplicationBucket}.s3.amazonaws.com'
            Id: protected-origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}'
        CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /index.html
        PriceClass: !Ref PriceClass
        DefaultRootObject: index.html
  DNSAlias:
    Type: AWS::Route53::RecordSet
    DependsOn:
      - CloudFrontDistribution
    Properties:
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
      HostedZoneName : !Ref HostedZoneName
      Name: !Ref DomainName
      Type: A
  DNSAAAAlias:
    Type: AWS::Route53::RecordSet
    DependsOn:
      - CloudFrontDistribution
    Properties:
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
      HostedZoneName : !Ref HostedZoneName
      Name: !Ref DomainName
      Type: AAAA
Outputs:
  AppBucketName:
    Description: Name of the created bucket for front-end resources
    Value: !Ref ApplicationBucket
  CloudFrontDistId:
    Description: ID of the CloudFront distribution that serves your SPA from S3
    Value: !Ref CloudFrontDistribution
  CloudFrontDomainName:
    Description: ID of the CloudFront distribution that serves your SPA from S3
    Value: !GetAtt CloudFrontDistribution.DomainName
